{"version":3,"sources":["components/Svg/Svg.jsx","components/Chart2/Chart2.jsx","components/AddForm/AddForm.jsx","components/Home/Home.jsx","utils/common.utils.js","App.js","index.js"],"names":["Svg","item","amountSum","angle","itemPercent","amount","width","height","className","style","transform","r","cx","cy","strokeDasharray","stroke","id","Chart2","filteredItems","items","filter","title","reduce","sum","current","length","map","key","AddForm","setItems","setFreePosition","setLastPosition","propTitle","propAmount","useState","setTitle","setAmount","useEffect","prevItems","any","deleteItem","useCallback","setTimeout","htmlFor","type","value","onChange","event","target","replace","onClick","Home","randomColor","freePosition","lastPosition","addPosition","every","previtems","randomNumber","Math","floor","random","toString","repeat","App","activeClassName","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae3e03f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Svg.scss';\n\nexport const Svg = ({\n  item, amountSum, angle,\n}) => {\n  const itemPercent = (item.amount / amountSum) * 158;\n\n  return (\n    <>\n      <svg\n\n        width=\"100\"\n        height=\"100\"\n        className=\"svg_pies\"\n        style={{ transform: `rotate(${-angle}deg)` }}\n      >\n        <circle\n          r=\"25\"\n          cx=\"50\"\n          cy=\"50\"\n          className=\"circle_pies\"\n          strokeDasharray={`${itemPercent} 158`}\n          stroke={`#${item.id}`}\n        />\n      </svg>\n    </>\n  );\n};\n\nSvg.propTypes = {\n  angle: PropTypes.number.isRequired,\n  amountSum: PropTypes.number.isRequired,\n  item: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Chart2.scss';\nimport { Svg } from '../Svg/Svg';\n\nconst Chart2 = ({ items }) => {\n  const filteredItems = items.filter((item) => item.title && item.amount);\n  let angle = 90;\n\n  const amountSum = filteredItems.reduce((sum, current) => sum + +current.amount, 0);\n  return (\n    <>\n      {filteredItems.length > 0 ? (\n        <section className=\"container\">\n          {filteredItems.map((item) => {\n            angle = (angle + (item.amount / amountSum) * 360) % 360;\n            return (\n              <Svg\n                key={item.id}\n                item={item}\n                amountSum={amountSum}\n                angle={angle}\n              />\n            );\n          })}\n        </section>\n\n      ) : (\n        <h2 className=\"no-data\">No data</h2>\n      )}\n    </>\n  );\n};\n\nChart2.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n};\n\nexport default Chart2;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './AddForm.scss';\n\nconst AddForm = ({\n  item,\n  items,\n  setItems,\n  setFreePosition,\n  setLastPosition,\n}) => {\n  const { title: propTitle, amount: propAmount } = item;\n  const [title, setTitle] = useState(propTitle);\n  const [amount, setAmount] = useState(propAmount);\n\n  useEffect(() => {\n    if (title && amount) {\n      setItems((prevItems) => prevItems.map((any) => {\n        if (any.id === item.id) {\n          return {\n            ...any,\n            title,\n            amount,\n          };\n        }\n        return any;\n      }));\n    }\n  }, [title, amount, setItems, item.id]);\n\n  const deleteItem = useCallback(() => {\n    if (items.length > 1) {\n      setItems((prevItems) => prevItems.filter((any) => any.id !== item.id));\n    } else {\n      setLastPosition(true);\n      setTimeout(() => {\n        setLastPosition(false);\n      }, 1500);\n    }\n  }, [item.id, items.length, setItems, setLastPosition]);\n\n  return (\n    <li>\n      <label htmlFor={`${item.id}Position`}>Position:</label>\n      <input\n        className=\"addform__input\"\n        type=\"text\"\n        id={`${item.id}Position`}\n        value={title}\n        onChange={(event) => {\n          setTitle(event.target.value);\n          setFreePosition(false);\n        }}\n      />\n      <label htmlFor={`${item.id}Amount`}>Amount:</label>\n      <input\n        className=\"addform__input\"\n        type=\"text\"\n        id={`${item.id}Amount`}\n        value={amount}\n        onChange={(event) => {\n          setAmount(event.target.value.replace(/[^\\d.]/g, ''));\n          setFreePosition(false);\n        }}\n      />\n      <button\n        className=\"addform__delete-button\"\n        type=\"button\"\n        onClick={deleteItem}\n      >\n        X\n      </button>\n    </li>\n  );\n};\n\nAddForm.propTypes = {\n  item: PropTypes.object.isRequired,\n  items: PropTypes.array.isRequired,\n  setItems: PropTypes.func.isRequired,\n  setFreePosition: PropTypes.func.isRequired,\n  setLastPosition: PropTypes.func.isRequired,\n};\n\nexport default AddForm;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddForm from '../AddForm/AddForm';\nimport './Home.scss';\n\nconst Home = ({ items, setItems, randomColor }) => {\n  const [freePosition, setFreePosition] = useState(false);\n  const [lastPosition, setLastPosition] = useState(false);\n\n  const addPosition = useCallback(() => {\n    if (items.every((any) => any.title && any.amount)) {\n      setItems((previtems) => [\n        ...previtems,\n        {\n          title: '',\n          amount: '',\n          id: randomColor(),\n        },\n      ]);\n    } else {\n      setFreePosition(true);\n    }\n  }, [items, randomColor, setItems]);\n\n  return (\n    <>\n      <ul>\n        {items.map((item) => (\n          <AddForm\n            key={item.id}\n            item={item}\n            items={items}\n            setItems={setItems}\n            setFreePosition={setFreePosition}\n            setLastPosition={setLastPosition}\n          />\n        ))}\n      </ul>\n      {lastPosition && (\n      <p className=\"error\">You can not delete last position</p>\n      )}\n\n      <button\n        className=\"add-position\"\n        type=\"button\"\n        onClick={addPosition}\n      >\n        Add position\n      </button>\n      {freePosition && (\n        <p className=\"error\">You have free position</p>\n      )}\n    </>\n  );\n};\n\nHome.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setItems: PropTypes.func.isRequired,\n  randomColor: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","export const randomColor = () => {\n  const randomNumber = Math.floor(Math.random() * 16777215).toString(16);\n  const color = '0'.repeat(6 - randomNumber.length) + randomNumber;\n  return color;\n};\n","import React, { useState } from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport Chart2 from './components/Chart2/Chart2';\nimport Home from './components/Home/Home';\nimport { randomColor } from './utils/common.utils';\n\nfunction App() {\n  const [items, setItems] = useState([\n    { title: '', amount: '', id: randomColor() },\n  ]);\n\n  return (\n    <>\n      <header className=\"header\">\n        <nav className=\"nav\">\n          <ul className=\"nav__list\">\n            <li className=\"nav__item\">\n              <NavLink\n                className=\"nav__link\"\n                activeClassName=\"nav__link_active\"\n                to=\"/\"\n                exact\n              >\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav__item\">\n              <NavLink\n                className=\"nav__link\"\n                activeClassName=\"nav__link_active\"\n                to=\"/chart\"\n                exact\n              >\n                Chart\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n        >\n          <Home\n            items={items}\n            setItems={setItems}\n            randomColor={randomColor}\n          />\n        </Route>\n        <Route\n          path=\"/chart\"\n          exact\n        >\n          <Chart2 items={items} />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}